//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Models.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Models.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE [Models.MarketData]
        ///GO
        ///SET ANSI_NULLS OFF
        ///GO
        ///SET QUOTED_IDENTIFIER OFF
        ///GO
        ///CREATE procedure [dbo].[sp_add_trend] (
        ///	@bidPrice decimal(18, 2),
        ///	@bidSize decimal (18, 2),
        ///	@askPrice decimal (18, 2),
        ///	@askSize decimal (18, 2),
        ///	@Sequence bigint 
        ///) 
        ///AS
        ///BEGIN
        ///
        ///    SET NOCOUNT ON
        ///
        ///    /*
        ///    ** Declarations.
        ///    */
        ///    DECLARE @retcode int=0
        ///            
        ///	-- CREATE TREND ENTRY -- 
        ///	--check if current trend
        ///	DECLARE @t_id INTEGER=NULL
        ///	DECLARE @t_trendType INTEGER=NULL
        ///
        ///	-- Status va [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Create_sp_add_trend {
            get {
                return ResourceManager.GetString("Create_sp_add_trend", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TRIGGER [dbo].[tr_WatchDownUpStrategy]  ON dbo.DownUpStrategies AFTER INSERT
        ///AS  
        ///DECLARE @StrategyID AS int
        ///DECLARE @BuyPrice AS decimal(18,2)
        ///DECLARE @MinimumThreshold AS decimal(18,10)
        ///
        ///SELECT @StrategyID			= StrategyID,
        ///       @BuyPrice 		= BuyPrice,
        ///       @MinimumThreshold 		= MinimumThreshold 	
        ///FROM INSERTED	   
        ///
        ///--TODO: Logic to calculate the size of the order will need to be computed more accurately
        ///DECLARE @Size AS decimal(18,10)
        ///DECLARE @Funds AS decimal(18,2)=100
        ///DECLARE @Ma [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Create_tr_WatchDownUpStrategy {
            get {
                return ResourceManager.GetString("Create_tr_WatchDownUpStrategy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TRIGGER [dbo].[tr_WatchFills]  ON dbo.Fills AFTER INSERT
        ///AS  
        ///DECLARE @FillId AS int 
        ///DECLARE @Price AS decimal(18,2)
        ///DECLARE @Size AS decimal(18,10)
        ///DECLARE @OrderId AS int 
        ///
        ///SELECT @FillId 	= FillId,		
        ///	   @Price	= Price,
        ///       @Size 	= Size,
        ///       @OrderId = OrderId
        ///FROM INSERTED	   
        ///
        ///--TODO: Will have to change for partial fills!!!!  **********
        ///UPDATE dbo.Orders SET Status = 2
        ///WHERE @orderId = OrderId
        ///
        ///GO.
        /// </summary>
        internal static string Create_tr_WatchFills {
            get {
                return ResourceManager.GetString("Create_tr_WatchFills", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TRIGGER [dbo].[tr_WatchOrder] ON dbo.Orders AFTER INSERT, UPDATE
        ///AS  
        ///DECLARE @OrderID AS int 
        ///DECLARE @Type 		AS int
        ///DECLARE @Status 	AS int 
        ///
        ///SELECT @OrderID 	= OrderId,
        ///       @Type 		= Type,
        ///       @Status 		= Status 	
        ///FROM INSERTED	   
        ///	
        ///IF @Status = 2
        ///BEGIN
        ///	;
        ///	WITH StrategyStatus(OrderId, OrderStatus, StrategyId) AS
        ///	(
        ///		SELECT o2.OrderId, o2.Status, s.StrategyId
        ///		FROM dbo.StrategyOrderJoins so
        ///		JOIN dbo.StrategyOrderJoins so2 ON so.StrategyId = so2.StrategyId
        ///		JOIN dbo.O [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Create_tr_WatchOrder {
            get {
                return ResourceManager.GetString("Create_tr_WatchOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TRIGGER [dbo].[tr_WatchStrategy]  ON dbo.Strategies AFTER INSERT
        ///AS  
        ///DECLARE @StrategyID AS int 
        ///DECLARE @Type 		AS int
        ///DECLARE @Status 	AS int 
        ///
        ///SELECT @StrategyId 	= StrategyId,		
        ///       @Type 		= Type,
        ///       @Status 		= Status 	
        ///FROM INSERTED	   
        ///
        ///--TODO: Logic to calculate the size of the order will need to be computed more accurately
        ///--DownUpStrategy
        ///DECLARE @Price AS decimal(18,10)
        ///SELECT TOP 1 @Price = AskPrice FROM dbo.Tickers ORDER BY Sequence DESC
        ///IF @Price &gt; 0
        ///BEGIN
        ///	DEC [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Create_tr_WatchStrategy {
            get {
                return ResourceManager.GetString("Create_tr_WatchStrategy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TRIGGER [dbo].[tr_WatchTicker]  ON dbo.Tickers AFTER INSERT
        ///AS  
        ///
        ///--Store in variables
        ///DECLARE	@bidPrice AS decimal(18, 2)
        ///DECLARE	@bidSize  AS decimal(18, 10)
        ///DECLARE	@askPrice AS decimal(18, 2)
        ///DECLARE	@askSize  AS decimal(18, 10)
        ///DECLARE	@Sequence AS bigint 
        ///
        ///SELECT @bidPrice = bidPrice,
        ///	   @bidSize  = bidSize ,
        ///	   @askPrice = askPrice,
        ///	   @askSize  = askSize ,
        ///	   @Sequence = Sequence
        ///	   FROM inserted
        ///
        ///
        ///--TODO: TEMPORARY!!! Process any fills due to price movement
        ///INSERT INT [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Create_tr_WatchTicker {
            get {
                return ResourceManager.GetString("Create_tr_WatchTicker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TRIGGER [dbo].[tr_WatchTrend]  ON dbo.Trends AFTER INSERT, UPDATE
        ///AS  
        ///DECLARE @TrendId 		AS int 
        ///DECLARE @StartSequence 	AS bigint 
        ///DECLARE @EndSequence 	AS bigint 
        ///DECLARE @StartBidPrice 	AS real 
        ///DECLARE @EndBidPrice 	AS real 
        ///DECLARE @StartAskPrice 	AS real 
        ///DECLARE @EndAskPrice 	AS real 
        ///DECLARE @Type 			AS int
        ///DECLARE @Status 		AS int 
        ///
        ///SELECT @TrendId 		= TrendId,		
        ///       @StartSequence 	= StartSequence 	,
        ///       @EndSequence 	= EndSequence 	,
        ///       @StartBidPrice 	= StartBidP [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Create_tr_WatchTrend {
            get {
                return ResourceManager.GetString("Create_tr_WatchTrend", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N&apos;[dbo].[V_Orders&apos;))
        ///EXEC dbo.sp_executesql @statement = N&apos;CREATE VIEW [dbo].[V_Orders]
        ///AS
        ///SELECT       o.OrderId 
        ///FROM            dbo.Orders
        ///&apos;.
        /// </summary>
        internal static string Create_V_Orders {
            get {
                return ResourceManager.GetString("Create_V_Orders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP TRIGGER [dbo].[sp_add_trend].
        /// </summary>
        internal static string Drop_sp_add_trend {
            get {
                return ResourceManager.GetString("Drop_sp_add_trend", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP TRIGGER [dbo].[tr_WatchDownUpStrategy].
        /// </summary>
        internal static string Drop_tr_WatchDownUpStrategy {
            get {
                return ResourceManager.GetString("Drop_tr_WatchDownUpStrategy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP TRIGGER [dbo].[tr_WatchDownUpStrategy].
        /// </summary>
        internal static string Drop_tr_WatchFills {
            get {
                return ResourceManager.GetString("Drop_tr_WatchFills", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP TRIGGER [dbo].[tr_WatchOrder].
        /// </summary>
        internal static string Drop_tr_WatchOrder {
            get {
                return ResourceManager.GetString("Drop_tr_WatchOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP TRIGGER [dbo].[tr_WatchStrategy].
        /// </summary>
        internal static string Drop_tr_WatchStrategy {
            get {
                return ResourceManager.GetString("Drop_tr_WatchStrategy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP TRIGGER [dbo].[tr_WatchTicker].
        /// </summary>
        internal static string Drop_tr_WatchTicker {
            get {
                return ResourceManager.GetString("Drop_tr_WatchTicker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP TRIGGER [dbo].[tr_WatchTrend].
        /// </summary>
        internal static string Drop_tr_WatchTrend {
            get {
                return ResourceManager.GetString("Drop_tr_WatchTrend", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP VIEW V_Orders.
        /// </summary>
        internal static string Drop_V_Orders {
            get {
                return ResourceManager.GetString("Drop_V_Orders", resourceCulture);
            }
        }
    }
}
