//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Models.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Models.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE FUNCTION GetLogLevel()
        ///RETURNS int WITH SCHEMABINDING
        ///BEGIN
        ///DECLARE @logLevel INT = 0
        ///SELECT @logLevel = Value FROM dbo.Globals WHERE Description = &apos;Logging Enabled&apos;
        ///RETURN @logLevel
        ///END
        ///GO
        ///.
        /// </summary>
        internal static string Create_GetLogLevel {
            get {
                return ResourceManager.GetString("Create_GetLogLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE procedure [dbo].[sp_add_spread] (
        ///	@bidPrice decimal(18, 2),
        ///	@askPrice decimal (18, 2),
        ///	@Sequence bigint 
        ///) 
        ///AS
        ///BEGIN
        ///
        ///    SET NOCOUNT ON
        ///
        ///    /*
        ///    ** Declarations.
        ///    */
        ///    DECLARE @retcode int=0
        ///            
        ///	-------------------= CREATE SPREADS =-------------------- 
        ///          
        ///	--check if current spread
        ///	DECLARE @s_id INTEGER=NULL
        ///	SELECT @s_id = s.spreadId FROM [dbo].[Spreads] s WHERE s.Status = 0 --Status values:= NULL (undefined), 0 (started), 1 (finished)
        ///
        ///	--if no c [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Create_sp_add_spread {
            get {
                return ResourceManager.GetString("Create_sp_add_spread", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE procedure [dbo].[sp_add_trend] (
        ///	@bidPrice decimal(18, 2),
        ///	@bidSize decimal (18, 2),
        ///	@askPrice decimal (18, 2),
        ///	@askSize decimal (18, 2),
        ///	@Sequence bigint 
        ///) 
        ///AS
        ///BEGIN
        ///
        ///    SET NOCOUNT ON
        ///
        ///    /*
        ///    ** Declarations.
        ///    */
        ///    DECLARE @retcode int=0
        ///            
        ///	-------------------= CREATE TRENDS =-------------------- 
        ///          
        ///	--check if current trend
        ///	DECLARE @t_id INTEGER=NULL
        ///	DECLARE @t_trendType INTEGER=NULL
        ///	SELECT @t_id = t.TrendId, @t_trendType = Type FROM [db [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Create_sp_add_trend {
            get {
                return ResourceManager.GetString("Create_sp_add_trend", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE procedure [dbo].[sp_down_up_strategy]  (
        ///	@BidPrice AS decimal(18,2),
        ///	@AskPrice AS decimal(18,2)
        ///)
        ///AS
        ///BEGIN
        ///    SET NOCOUNT ON
        ///
        ///    /*
        ///    ** Declarations.
        ///    */
        ///    DECLARE @retcode int=0
        ///   
        ///	DECLARE @Funds AS decimal(18,10)=0
        ///	SELECT @Funds = Value FROM dbo.Funds WHERE AllocationType = 1 --allocation type is funds for use
        ///
        ///	DECLARE @cancelledStatus AS INT = -2
        ///	DECLARE @pendingStatus AS INT = -1 
        ///	DECLARE @readyStatus AS INT = 0
        ///	DECLARE @openStatus AS INT = 1
        ///	DECLARE @fille [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Create_sp_down_up_strategy {
            get {
                return ResourceManager.GetString("Create_sp_down_up_strategy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE procedure [dbo].[sp_log_event] (
        ///	@Level AS int,
        ///	@Context AS NVARCHAR(max),
        ///	@Text AS NVARCHAR(max)
        ///) 
        ///AS
        ///BEGIN
        ///
        ///    SET NOCOUNT ON
        ///
        ///    /*
        ///    ** Declarations.
        ///    */
        ///    DECLARE @retcode int=0
        /// 
        ///	INSERT dbo.Logs VALUES (@Level, @Context, @Text)
        ///	return @retcode
        ///END.
        /// </summary>
        internal static string Create_sp_log_event {
            get {
                return ResourceManager.GetString("Create_sp_log_event", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TRIGGER [dbo].[tr_AllocateOrder] ON dbo.Orders INSTEAD OF UPDATE
        ///AS  
        ///DECLARE @OrderID AS int 
        ///DECLARE @Price		AS decimal(18,2)
        ///DECLARE @Size 		AS decimal(18,10)
        ///DECLARE @Type 		AS int
        ///DECLARE @Status 	AS int 
        ///
        ///SELECT @OrderID 	= OrderId,
        ///       @Price 		= Price,
        ///       @Size 		= Size,
        ///       @Type 		= Type,
        ///       @Status 		= Status 	
        ///FROM INSERTED
        ///
        ///DECLARE @cancelledStatus AS INT = -2
        ///DECLARE @pendingStatus AS INT = -1 
        ///DECLARE @readyStatus AS INT = 0
        ///DECLARE @filledStatus AS INT  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Create_tr_AllocateOrder {
            get {
                return ResourceManager.GetString("Create_tr_AllocateOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TRIGGER [dbo].[tr_WatchDownUpStrategy]  ON dbo.DownUpStrategies AFTER INSERT
        ///AS  
        ///DECLARE @StrategyID AS int
        ///DECLARE @BuyPrice AS decimal(18,2)
        ///DECLARE @MinimumThreshold AS decimal(18,10)
        ///
        ///SELECT @StrategyID			= StrategyID,
        ///       @BuyPrice 			= BuyPrice,
        ///       @MinimumThreshold	= MinimumThreshold 	
        ///FROM INSERTED	   
        ///
        ///GO.
        /// </summary>
        internal static string Create_tr_WatchDownUpStrategy {
            get {
                return ResourceManager.GetString("Create_tr_WatchDownUpStrategy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TRIGGER [dbo].[tr_WatchFills]  ON dbo.Fills AFTER INSERT
        ///AS  
        ///DECLARE @FillId AS int 
        ///DECLARE @Price AS decimal(18,2)
        ///DECLARE @Size AS decimal(18,10)
        ///DECLARE @ExternalOrderId AS varchar(255) 
        ///
        ///
        ///
        ///DECLARE @cancelledStatus AS INT = -2
        ///DECLARE @pendingStatus AS INT = -1 
        ///DECLARE @readyStatus AS INT = 0
        ///DECLARE @filledStatus AS INT = 2
        ///
        ///
        ///SELECT @FillId 	= FillId,		
        ///	   @Price	= Price,
        ///       @Size 	= Size,
        ///       @ExternalOrderId = ExternalOrderId
        ///FROM INSERTED	   
        ///
        ///UPDATE dbo.Orders  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Create_tr_WatchFills {
            get {
                return ResourceManager.GetString("Create_tr_WatchFills", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TRIGGER [dbo].[tr_WatchFund]  ON dbo.Funds AFTER INSERT, UPDATE
        ///AS  
        ///DECLARE @Value as DECIMAL(18,10)
        ///
        ///SELECT @Value = VALUE
        ///FROM INSERTED
        ///
        ///
        ///declare @sequence bigint
        ///select top 1 @sequence = sequence from tickers order by sequence desc
        ///declare @seqstr varchar(20) = CONVERT(varchar(20), @sequence)
        ///
        ///IF @Value &lt; 0
        ///	RAISERROR(N&apos;Funds dropped below 0 at sequence %s&apos;,
        ///				18, --Severity
        ///				1, 
        ///				@seqstr
        ///				);
        ///
        ///
        ///IF @Value &gt; 210
        ///	RAISERROR(N&apos;Funds dropped below 0 at sequence %s&apos;,
        ///		 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Create_tr_WatchFund {
            get {
                return ResourceManager.GetString("Create_tr_WatchFund", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TRIGGER [dbo].[tr_WatchOrder] ON dbo.Orders AFTER INSERT, UPDATE
        ///AS  
        ///DECLARE @OrderID AS int 
        ///DECLARE @Price		AS decimal(18,2)
        ///DECLARE @Size 		AS decimal(18,10)
        ///DECLARE @Type 		AS int
        ///DECLARE @Status 	AS int 
        ///
        ///SELECT @OrderID 	= OrderId,
        ///       @Price 		= Price,
        ///       @Size 		= Size,
        ///       @Type 		= Type,
        ///       @Status 		= Status 	
        ///FROM INSERTED	  
        ///
        ///DECLARE @cancelledStatus AS INT = -2
        ///DECLARE @pendingStatus AS INT = -1 
        ///DECLARE @readyStatus AS INT = 0
        ///DECLARE @openStatus AS INT [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Create_tr_WatchOrder {
            get {
                return ResourceManager.GetString("Create_tr_WatchOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TRIGGER [dbo].[tr_WatchPosition]  ON dbo.Positions AFTER INSERT, UPDATE
        ///AS  
        ///DECLARE @Value AS Decimal(18,10)
        ///
        ///GO.
        /// </summary>
        internal static string Create_tr_WatchPosition {
            get {
                return ResourceManager.GetString("Create_tr_WatchPosition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TRIGGER [dbo].[tr_WatchSpread]  ON dbo.Spreads AFTER INSERT, UPDATE
        ///AS  
        ///DECLARE @SpreadId 		AS int 
        ///DECLARE @StartSequence 	AS bigint 
        ///DECLARE @EndSequence 	AS bigint 
        ///DECLARE @BidPrice 	AS real 
        ///DECLARE @AskPrice 	AS real 
        ///DECLARE @Status 		AS int 
        ///
        ///SELECT @SpreadId 		= SpreadId,		
        ///       @StartSequence 	= StartSequence 	,
        ///       @EndSequence 	= EndSequence 	,
        ///       @BidPrice 	= StartBidPrice 	,
        ///       @AskPrice 	= StartAskPrice 	,
        ///       @Status 		    = Status 	
        ///FROM INSERTED	   
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Create_tr_WatchSpread {
            get {
                return ResourceManager.GetString("Create_tr_WatchSpread", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TRIGGER [dbo].[tr_WatchStrategy]  ON dbo.Strategies AFTER INSERT
        ///AS  
        ///DECLARE @StrategyID AS int 
        ///DECLARE @Type 		AS int
        ///DECLARE @Status 	AS int 
        ///
        ///SELECT @StrategyId 	= StrategyId,		
        ///       @Type 		= Type,
        ///       @Status 		= Status 	
        ///FROM INSERTED	   
        ///
        ///
        ///GO.
        /// </summary>
        internal static string Create_tr_WatchStrategy {
            get {
                return ResourceManager.GetString("Create_tr_WatchStrategy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TRIGGER [dbo].[tr_WatchTicker]  ON dbo.Tickers AFTER INSERT
        ///AS  
        ///
        ///--Store in variables
        ///DECLARE	@bidPrice AS decimal(18, 2)
        ///DECLARE	@bidSize  AS decimal(18, 10)
        ///DECLARE	@askPrice AS decimal(18, 2)
        ///DECLARE	@askSize  AS decimal(18, 10)
        ///DECLARE	@Sequence AS bigint 
        ///
        ///SELECT @bidPrice = bidPrice,
        ///	   @bidSize  = bidSize ,
        ///	   @askPrice = askPrice,
        ///	   @askSize  = askSize ,
        ///	   @Sequence = Sequence
        ///	   FROM inserted
        ///
        ///--Order statuses
        ///DECLARE @cancelledStatus AS INT = -2
        ///DECLARE @pendingSt [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Create_tr_WatchTicker {
            get {
                return ResourceManager.GetString("Create_tr_WatchTicker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TRIGGER [dbo].[tr_WatchTrend]  ON dbo.Trends AFTER INSERT, UPDATE
        ///AS  
        ///DECLARE @TrendId 		AS int 
        ///DECLARE @StartSequence 	AS bigint 
        ///DECLARE @EndSequence 	AS bigint 
        ///DECLARE @StartBidPrice 	AS real 
        ///DECLARE @EndBidPrice 	AS real 
        ///DECLARE @StartAskPrice 	AS real 
        ///DECLARE @EndAskPrice 	AS real 
        ///DECLARE @Type 			AS int
        ///DECLARE @Status 		AS int 
        ///
        ///SELECT @TrendId 		= TrendId,		
        ///       @StartSequence 	= StartSequence 	,
        ///       @EndSequence 	= EndSequence 	,
        ///       @StartBidPrice 	= StartBidP [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Create_tr_WatchTrend {
            get {
                return ResourceManager.GetString("Create_tr_WatchTrend", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///CREATE VIEW [dbo].[V_Exposure] AS
        ///WITH CurrentPrices(BidPrice, AskPrice) AS
        ///(
        ///SELECT TOP 1 t.BidPrice, t.AskPrice
        ///FROM dbo.Tickers t
        ///ORDER BY t.Sequence DESC
        ///)
        ///SELECT	NEWID() AS Id, (p.Size * cp.BidPrice) AS Value, p.Size AS Size
        ///FROM	dbo.Positions p, CurrentPrices cp 
        ///.
        /// </summary>
        internal static string Create_V_Exposure {
            get {
                return ResourceManager.GetString("Create_V_Exposure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///CREATE VIEW [dbo].[V_Orders] AS
        ///SELECT	o.OrderId  AS OrderId
        ///FROM	dbo.Orders o
        ///.
        /// </summary>
        internal static string Create_V_Orders {
            get {
                return ResourceManager.GetString("Create_V_Orders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP FUNCTION GetLogLevel
        ///GO.
        /// </summary>
        internal static string Drop_GetLogLevel {
            get {
                return ResourceManager.GetString("Drop_GetLogLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP PROCEDURE [dbo].[sp_add_spread].
        /// </summary>
        internal static string Drop_sp_add_spread {
            get {
                return ResourceManager.GetString("Drop_sp_add_spread", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP PROCEDURE [dbo].[sp_add_trend].
        /// </summary>
        internal static string Drop_sp_add_trend {
            get {
                return ResourceManager.GetString("Drop_sp_add_trend", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP PROCEDURE [dbo].[sp_down_up_strategy].
        /// </summary>
        internal static string Drop_sp_down_up_strategy {
            get {
                return ResourceManager.GetString("Drop_sp_down_up_strategy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP PROCEDURE [dbo].[sp_log_event].
        /// </summary>
        internal static string Drop_sp_log_event {
            get {
                return ResourceManager.GetString("Drop_sp_log_event", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP TRIGGER [dbo].[tr_AllocateOrder]
        ///.
        /// </summary>
        internal static string Drop_tr_AllocateOrder {
            get {
                return ResourceManager.GetString("Drop_tr_AllocateOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP TRIGGER [dbo].[tr_WatchDownUpStrategy].
        /// </summary>
        internal static string Drop_tr_WatchDownUpStrategy {
            get {
                return ResourceManager.GetString("Drop_tr_WatchDownUpStrategy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP TRIGGER [dbo].[tr_WatchDownUpStrategy].
        /// </summary>
        internal static string Drop_tr_WatchFills {
            get {
                return ResourceManager.GetString("Drop_tr_WatchFills", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP TRIGGER [dbo].[tr_WatchFund].
        /// </summary>
        internal static string Drop_tr_WatchFund {
            get {
                return ResourceManager.GetString("Drop_tr_WatchFund", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP TRIGGER [dbo].[tr_WatchOrder].
        /// </summary>
        internal static string Drop_tr_WatchOrder {
            get {
                return ResourceManager.GetString("Drop_tr_WatchOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP TRIGGER [dbo].[tr_WatchPosition].
        /// </summary>
        internal static string Drop_tr_WatchPosition {
            get {
                return ResourceManager.GetString("Drop_tr_WatchPosition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP TRIGGER [dbo].[tr_WatchSpread].
        /// </summary>
        internal static string Drop_tr_WatchSpread {
            get {
                return ResourceManager.GetString("Drop_tr_WatchSpread", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP TRIGGER [dbo].[tr_WatchStrategy].
        /// </summary>
        internal static string Drop_tr_WatchStrategy {
            get {
                return ResourceManager.GetString("Drop_tr_WatchStrategy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP TRIGGER [dbo].[tr_WatchTicker].
        /// </summary>
        internal static string Drop_tr_WatchTicker {
            get {
                return ResourceManager.GetString("Drop_tr_WatchTicker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP TRIGGER [dbo].[tr_WatchTrend].
        /// </summary>
        internal static string Drop_tr_WatchTrend {
            get {
                return ResourceManager.GetString("Drop_tr_WatchTrend", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP VIEW V_Exposure.
        /// </summary>
        internal static string Drop_V_Exposure {
            get {
                return ResourceManager.GetString("Drop_V_Exposure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP VIEW V_Orders.
        /// </summary>
        internal static string Drop_V_Orders {
            get {
                return ResourceManager.GetString("Drop_V_Orders", resourceCulture);
            }
        }
    }
}
